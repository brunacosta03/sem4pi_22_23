@startuml "User and Course Aggregates"

hide methods
left to right direction

skinparam classAttributeIconSize 0

skinparam class {
    LifeLineBorderColor DodgerBlue
    LifeLineBackgroundColor APPLICATION
    BackgroundColor #D8F5FF
    ArrowColor DodgerBlue
    BorderColor DodgerBlue
}

skinparam packageStyle rectangle
skinparam card {
    LifeLineBorderColor DodgerBlue
    LifeLineBackgroundColor APPLICATION
    BackgroundColor #D8F5FF
    ArrowColor DodgerBlue
    BorderColor DodgerBlue
}


package "User Aggregate"{
    entity User <<entity>><<root>>

'User value objects
    card Email <<Value Object>>{
    }
    card Password <<Value Object>>{
    }
    card FullName <<Value Object>>{
    }
    card ShortName <<Value Object>>{
    }

    User --> Email
    User --> Password
    User --> FullName
    User --> ShortName

}

package "Course Aggregate"{
    entity Course <<entity>><<root>>

    'Course value objects
    card Code <<Value Object>> {
    }
    card Name <<Value Object>>{
    }
    card State <<Value Object>>{
    }
    card Description <<Value Object>>{
    }
    card Limit <<Value Object>>{
    }
    card Edition <<Value Object>>{
    }


    Course --> Name
    Course --> State
    Course --> Description
    Course --> Limit
    Course --> Code

    note right of State
        Can be one of the following:
            - Open
            - Closed
            - Enroll
            - InProgress
    end note

    note left of Limit
        Each course as a lower
        and higher limit
        number of students
    end note

    note right of Code
        Each course has a unique code
        Example: "JAVA-1"
    end note

    entity Edition <<entity>>


    note left
        Still waiting for the client answer
        since Edition is a concept that needs
        to be further specified.
    end note

    'Different editions of a course are to be considered different courses
    'combinations:
    'same course code, same edition = same course (needs to be verified in the application, when creating a course)
    'same course code, different edition = different course(valid)
    'different course code, same edition = different course(valid)
    'different course code, different edition = different course(valid)
}

package "Teacher Aggregate"{

    entity Teacher <<entity>><<root>>

    'Teacher value objects
    card Acronym <<Value Object>>{
    }
    card BirthDate <<Value Object>>{
    }
    card TaxPayerNumber <<Value Object>>{
    }
    Teacher --> BirthDate
    Teacher --> TaxPayerNumber
    Teacher --> Acronym

}

package "Manager Aggregate"{

    entity Manager <<entity>><<root>>

}

package "Student Aggregate"{

    entity Student <<entity>><<root>>
    'Student value objects
    card BirthDate <<Value Object>>{
    }
    card TaxPayerNumber <<Value Object>>{
    }
    card MechanographicNumber <<Value Object>>{
    }
    Student --> BirthDate
    Student --> TaxPayerNumber
    Student --> MechanographicNumber

}

    'Every system actor is a user
    Teacher --> User
    Manager --> User
    Student --> User

    Teacher --> Course
    Student --> Course

    Course --> Edition

@enduml